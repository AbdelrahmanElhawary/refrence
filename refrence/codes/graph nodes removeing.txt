#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<map>
#include<cmath>
#include<algorithm>
#include<string>
#include<set>
#include<sstream>
#include<vector>
#include<string.h>
#include<queue>
#include<list>
#include<iterator>
#include<functional> 
#include<iomanip>
#include<bitset>
#include<stack>
#define F first
#define S second
#define ll long long
#define ld long double
#define ull unsigned ll 
#define dong long
#define endl '\n'
#define mk make_pair
using namespace std;
void fast_in_out() {
	std::ios_base::sync_with_stdio(NULL);
	cin.tie(NULL); cout.tie(NULL);
}
void pause() {
#ifndef ONLINE_JUDGE
	system("pause");
#endif
}
vector<int>arr[200001];
int deg[200001];
bool vis[200001];
vector<int>ans;
void add(int node, int par)
{
	if (deg[node] & 1)return;
	vis[node] = 1; ans.push_back(node);
	for (int i = 0; i < arr[node].size(); i++)
		deg[arr[node][i]]--;
	for (int i = 0; i < arr[node].size(); i++)
		if (arr[node][i] != par && !vis[arr[node][i]])
			add(arr[node][i], node);
}
void dfs(int node, int par)
{
	for (int i = 0; i < arr[node].size(); i++)
		if (arr[node][i] != par)
		dfs(arr[node][i], node);
	if (!(deg[node] & 1))
		add(node, par);
}
int main() {
	fast_in_out();
	//cout << fixed << setprecision(0);
	int n; cin >> n;
	for (int i = 0; i < n; i++)
	{
		int x;
		cin >> x;
		if (!x)continue;
		deg[x]++; deg[i + 1]++;
		arr[x].push_back(i+1);
		arr[i+1].push_back(x);
	}
	dfs(1, 0);
	if (ans.size() == n)
	{
		cout << "YES\n";
		for (int i = 0; i < n; i++)
			cout << ans[i] << endl;
	}
	else cout << "NO\n";
	pause();
	return 0;
}