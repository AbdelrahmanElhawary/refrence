int circleLineIntersection(const point& p0, const point& p1, const point& cen, long double rad, point& r1, point& r2) {
	if (same(p0, p1)) {
		if (fabs(lengthSqr(vec(p0, cen)) - (rad * rad)) < EPS) {
		r1 = r2 = p0;
		return 1;
		}
		return 0;
	}
	long double a, b, c, t1, t2;
	a = dot(p1 - p0, p1 - p0);
	b = 2 * dot(p1 - p0, p0 - cen);
	c = dot(p0 - cen, p0 - cen) - rad * rad;
	double det = b * b - 4 * a * c; 
	int res;
	if (fabs(det) < EPS)
		det = 0, res = 1;
	else if (det < 0) 
		res = 0;
	else
		res = 2; 
	det = sqrt(det);
	t1 = (-b + det) / (2 * a);
	t2 = (-b - det) / (2 * a);
	r1 = p0 + t1 * (p1 - p0); 
	r2 = p0 + t2 * (p1 - p0);
	return res;
}